import{_ as e,r as c,o,c as l,a as n,b as s,d as t,e as p}from"./app-20538318.js";const i={},u=n("p",null,"本文采用jmeter对前一篇文章中的snmp管理端接口进行压力测试，使用wireshark进行抓包，使用性能监视器对管理端pc进行性能监视。",-1),k=n("h2",{id:"jmeter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jmeter","aria-hidden":"true"},"#"),s(" Jmeter")],-1),r={href:"https://blog.csdn.net/qq_24391607/article/details/105309171",target:"_blank",rel:"noopener noreferrer"},d=n("h3",{id:"安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),s(" 安装")],-1),m=n("p",null,"首先主机上要有jdk，并且已经配好环境变量。",-1),v={href:"https://dlcdn.apache.org//jmeter/binaries/apache-jmeter-5.6.2.zip",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"bin",-1),b=n("code",null,"jmeter.bat",-1),h=p(`<p>修改中文步骤如下图：</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/140b50c2e4ca3d9252c201f849e4c668.png" alt="image-20231220133315880" loading="lazy"></p><h3 id="简单介绍" tabindex="-1"><a class="header-anchor" href="#简单介绍" aria-hidden="true">#</a> 简单介绍</h3><p>jmeter是一个压力测试工具，可以为各种协议进行压测，最常见的是对HTTP接口进行测试。我们这里选择对java本地代码进行压测。</p><p>左侧是一个Test Plan，代表一个<strong>压测计划</strong>。我们可以右键新增一个最普通的<strong>线程组</strong>，代表计划中的一个测试组，线程组可以配置并发数，循环次数，每组之间的等待时间。在线程组中可以新增一个实际的压测目标，可以是一个HTTP接口，SMTP接口，TCP接口等等，也可以是一个Junit测试方法，当然也可以是一个Java普通方法。</p><p>如图就可以新增一个Java请求，接下来的具体做法在下面介绍：</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/ceda038ec8a4c8ba42232917e66ccf94.png" alt="image-20231220133834026" loading="lazy"></p><h2 id="测试代码" tabindex="-1"><a class="header-anchor" href="#测试代码" aria-hidden="true">#</a> 测试代码</h2><h3 id="代码修改" tabindex="-1"><a class="header-anchor" href="#代码修改" aria-hidden="true">#</a> 代码修改</h3><p>如果想要使用Jmeter对Java本地方法进行压测，那么我们就需要符合Jmeter提出的规范，具体来说就是要实现Jmeter提供的一个接口。</p><p>在pom文件中新增以下依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.jmeter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ApacheJMeter_core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.jmeter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ApacheJMeter_java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建一个测试类，实现<code>JavaSamplerClient</code>接口，重写方法。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestMySnmp</span> <span class="token keyword">implements</span> <span class="token class-name">JavaSamplerClient</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setupTest</span><span class="token punctuation">(</span><span class="token class-name">JavaSamplerContext</span> javaSamplerContext<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">SampleResult</span> <span class="token function">runTest</span><span class="token punctuation">(</span><span class="token class-name">JavaSamplerContext</span> javaSamplerContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SampleResult</span> sr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SampleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            sr<span class="token punctuation">.</span><span class="token function">sampleStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">MySnmp</span> snmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MySnmp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> result <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">snmp<span class="token punctuation">.</span></span>TestGet</span><span class="token punctuation">(</span><span class="token string">&quot;192.168.72.130/161&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1.3.6.1.2.1.6.2.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sr<span class="token punctuation">.</span><span class="token function">setResponseData</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sr<span class="token punctuation">.</span><span class="token function">setSuccessful</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
            sr<span class="token punctuation">.</span><span class="token function">setSuccessful</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            sr<span class="token punctuation">.</span><span class="token function">setSamplerData</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        sr<span class="token punctuation">.</span><span class="token function">sampleEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">teardownTest</span><span class="token punctuation">(</span><span class="token class-name">JavaSamplerContext</span> javaSamplerContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Arguments</span> <span class="token function">getDefaultParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们这里对上一次的Snmp管理端代码做了一些修改：</p><ul><li>由于只需要对一个Oid进行简单的Get操作，我们只留下了一个TestGet方法</li><li>将成员变量设置为类变量，防止并发冲突</li><li>注意最后要对snmp进行关闭监听，不然会出现错误</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MySnmp</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">CommunityTarget</span> target<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Snmp</span> snmp<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">TestGet</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">,</span><span class="token class-name">String</span> community<span class="token punctuation">,</span><span class="token class-name">String</span> oid<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span><span class="token punctuation">{</span>
            <span class="token function">init</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span>community<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">PDU</span> pdu <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pdu<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token constant">PDU</span><span class="token punctuation">.</span><span class="token constant">GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pdu<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">VariableBinding</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OID</span><span class="token punctuation">(</span>oid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">TestSendSnmpRequest</span><span class="token punctuation">(</span>pdu<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            snmp<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token class-name">TestSendSnmpRequest</span><span class="token punctuation">(</span><span class="token class-name">PDU</span> pdu<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
        <span class="token class-name">ResponseEvent</span> responseEvent <span class="token operator">=</span> snmp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>pdu<span class="token punctuation">,</span> target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">PDU</span> response <span class="token operator">=</span> responseEvent<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>responseEvent<span class="token punctuation">.</span><span class="token function">getError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">||</span> response <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getErrorStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">PDU</span><span class="token punctuation">.</span>noError<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">VariableBinding</span><span class="token punctuation">&gt;</span></span> vbs <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getVariableBindings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">VariableBinding</span> vb <span class="token operator">:</span> vbs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> vb<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">String</span> ip<span class="token punctuation">,</span> <span class="token class-name">String</span> community<span class="token punctuation">)</span>  <span class="token punctuation">{</span>
        target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommunityTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        target<span class="token punctuation">.</span><span class="token function">setCommunity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">OctetString</span><span class="token punctuation">(</span>community<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        target<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UdpAddress</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        target<span class="token punctuation">.</span><span class="token function">setRetries</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        target<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        target<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span><span class="token class-name">SnmpConstants</span><span class="token punctuation">.</span>version2c<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            snmp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Snmp</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultUdpTransportMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            snmp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后使用maven进行打包，我们要额外加入打包插件，将我们使用的第三方jar包也打入我们的jar包中。</p><p>在pom文件中加入以下代码，然后complie即可。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- Maven Assembly Plugin --&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-assembly-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.4.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                <span class="token comment">&lt;!-- get all project dependencies --&gt;</span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>descriptorRefs</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>descriptorRef</span><span class="token punctuation">&gt;</span></span>jar-with-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>descriptorRef</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>descriptorRefs</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>make-assembly<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
                    <span class="token comment">&lt;!-- bind to the packaging phase --&gt;</span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>phase</span><span class="token punctuation">&gt;</span></span>package<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>phase</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">&gt;</span></span>single<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="部署jar包" tabindex="-1"><a class="header-anchor" href="#部署jar包" aria-hidden="true">#</a> 部署jar包</h3><p>接下来，我们对打好的jar包进行部署。</p><p>打开项目目录下的target目录，其中有一个类似<code>snmp-1.0-SNAPSHOT-jar-with-dependencies.jar</code>的jar包，将其复制，放置到<code>apache-jmeter-5.6.2\\lib\\ext</code>。</p><p>现在再次启动jmeter，创建java request，会发现多了一个TestGet测试选项，如果没有那就是出现问题了，需要自己再检查一下，可以点击右侧的下三角看一下。</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/0a16a100e4f34bc94ab0ce3f46ec1492.png" alt="image-20231220135140019" loading="lazy"></p><h2 id="wireshark" tabindex="-1"><a class="header-anchor" href="#wireshark" aria-hidden="true">#</a> wireshark</h2><p>在本次实验，我们需要用到wireshark进行抓包，所以我们需要确定，当前的请求是走的哪张网卡。</p><p>首先需要说的是，如果你使用127.0.0.1，它实际上是不走物理网卡的，你能够在wireshark中抓到它发送的包，但是你在性能监测中无法具体的看到网络的变化。我这里为了方便使用了虚拟机，没有选择借用其他的人的电脑。VMware，Oracle VM VirtualBox都可以，或者省事在HCL里创建PC和Host相连也行。创建好主机后需要去网上搜一下Linux配置Snmp，我这里就不再赘述。</p><p>那么要怎么判断使用的是哪张网卡呢？如果你连接的是其他人的pc，那么应该就是无线网卡。如果你设置的是虚拟机，那么先靠猜，如果用的是HCL，其实在连线时就已经选择了网卡了。如果使用的是虚拟机，大致也是可以通过名称区分的。但是对于VMware，有很多张名字很像的网卡，这时就需要去判断一下了。</p><p>我们首先获取到虚拟机ip，打开适配器选项页面：</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/e6d2507b01dc6e4e6f1549463510e2c2.png" alt="image-20231220141827218" loading="lazy"></p><p>对类似的网卡挨个右键选择状态，点击详细信息，根据ip地址和掩码计算一下是否在一个网络即可。</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/e19987da5ab19581a80ad571cbbafed8.png" alt="image-20231220141952535" loading="lazy"></p><p>我们确认网卡后，进入wireshark，输入过滤器snmp就完成了wireshark的准备工作，我这里抓的是VMware-8的虚拟网卡。</p><h2 id="性能监视" tabindex="-1"><a class="header-anchor" href="#性能监视" aria-hidden="true">#</a> 性能监视</h2>`,35),w={href:"https://www.cnblogs.com/xdot/p/10110396.html",target:"_blank",rel:"noopener noreferrer"},y=p('<p>在windows下自带性能监视工具，可以直接搜索性能监视器打开即可</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/cf211aff59e32e9a4898bc3fdafe361e.png" alt="image-20231220142935557" loading="lazy"></p><p>接下来设置我们这次要用到的指标：cpu工作占比，可用内存数（MB），网卡总接收发送数（B）</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/fa5b886e556c545024d465f63e2c141a.png" alt="image-20231220144052970" loading="lazy"></p><p>注意对于虚拟机模拟出来的虚拟网卡，在network interface中是不存在的，需要在network adapter中寻找。</p><p>此时可能会出现一条线一直在100或一直处于较低的状态，这是我们需要调整一下它的权重。我们右键点击指标，点击比例，可以调整到正常波动大小。</p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/928ce3957a718f86af8271a328ca2838.png" alt="image-20231220144401961" style="zoom:50%;"><p>这是我调整的比例，可以参考一下：</p><p><img src="https://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/c16aba8794727a95e5b7ec1889557ad9.png" alt="image-20231220144559249" loading="lazy"></p><p>现在性能监视也准备好了。</p><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><h3 id="oom" tabindex="-1"><a class="header-anchor" href="#oom" aria-hidden="true">#</a> oom</h3>',12),f={href:"https://www.cnblogs.com/ailiailan/p/11562367.html",target:"_blank",rel:"noopener noreferrer"},_=n("h3",{id:"no-buffer-space-available-maximum-connections-reached-bind",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#no-buffer-space-available-maximum-connections-reached-bind","aria-hidden":"true"},"#"),s(" No buffer space available (maximum connections reached?): bind")],-1),x={href:"https://zhuanlan.zhihu.com/p/604394878",target:"_blank",rel:"noopener noreferrer"},j={href:"https://www.cnblogs.com/asdyzh/p/15190323.html",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,"snmp.close()",-1);function z(T,E){const a=c("ExternalLinkIcon");return o(),l("div",null,[u,k,n("p",null,[n("a",r,[s("JMeter压力测试工具"),t(a)])]),d,m,n("p",null,[s("对于windows："),n("a",v,[s("点击下载jmeter"),t(a)]),s("，下载zip包后，解压出来，在"),g,s("目录下有一个名叫"),b,s("的文件，双击即可运行。注意弹出的cmd窗口不可关闭。")]),h,n("p",null,[n("a",w,[s("Windows 性能监视器的基本指标说明（CPU,内存,硬盘参数） - Rocken.li - 博客园 (cnblogs.com)"),t(a)])]),y,n("p",null,[n("a",f,[s("JMeter内存溢出：java.lang.OutOfMemoryError: Java heap space - 海布里Simple - 博客园 (cnblogs.com)"),t(a)])]),_,n("p",null,[n("a",x,[s("Windows 产生大量 TIME_WAIT 连接"),t(a)])]),n("p",null,[n("a",j,[s("Windows time_wait过多解决办法"),t(a)])]),S])}const C=e(i,[["render",z],["__file","snmp压力测试.html.vue"]]);export{C as default};
