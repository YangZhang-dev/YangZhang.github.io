import{_ as t,o as l,c as e,e as n,a,b as s}from"./app-20538318.js";const m={},r=n('<p>本章主要是让我们对计算机网络有一个初步的认识，刚开始可能读的有一点模糊，不过随着后面的章节学习，很多知识都会前后呼应。</p><h2 id="_1-什么是因特网" tabindex="-1"><a class="header-anchor" href="#_1-什么是因特网" aria-hidden="true">#</a> 1. 什么是因特网</h2><h3 id="_1-1-具体功能描述" tabindex="-1"><a class="header-anchor" href="#_1-1-具体功能描述" aria-hidden="true">#</a> 1.1 具体功能描述</h3><p>计算机网络在我看来就是所有能联网的设备组成的网络，不仅仅是pc和服务器。这些设备被称为主机或是端系统。</p><p>端系统之间通过<strong>通信链路</strong>（communication link）和<strong>分组交换机</strong>（packet switch）连接在一起。链路的<strong>传输速率</strong>（transmission rate）以比特每秒度量。在端系统之间进行交换消息时，发送放将数据分段，加入首部字节，形成<strong>分组</strong>（packet），也称为包。</p><p>分组交换机会从一条入通信链路获取到达的分组，并转发到它的一条出通信链路。两种常见的分组交换机分别是<strong>路由器</strong>（router）和<strong>链路层交换机</strong>（link-layer switch），它们一个工作在三层，一个工作在二层。一个分组从发送端到接收端会经历一系列的通信链路和分组交换机。</p><p>端系统会通过因特网服务提供商（Internet Service Provider，ISP）来接入因特网。</p><p>同时，端系统，分组交换机和其他的部件都要运行多个<strong>协议</strong>（protocol），这些协议控制信息的接受和发送。TCP和IP协议是最主要的两个协议。</p><img src="http://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/因特网的一些组成.jpg" alt="因特网的一些组成" style="zoom:25%;"><h2 id="_2-网络边缘" tabindex="-1"><a class="header-anchor" href="#_2-网络边缘" aria-hidden="true">#</a> 2. 网络边缘</h2><p>通常端系统处于网络的边缘，所以称为网络边缘。端系统也称为主机，可以分为<strong>客户</strong>（client）和<strong>服务器</strong>（server）。</p><h3 id="_2-1-接入网" tabindex="-1"><a class="header-anchor" href="#_2-1-接入网" aria-hidden="true">#</a> 2.1 接入网</h3><p>接入网是将端系统物理连接到<strong>边缘路由器</strong>（edge router）的网络。</p><p>家庭接入有：DSL，电缆，FTTH（光纤），5G固定式无线。</p><p>企业和家庭接入：以太网，WIFI</p><h3 id="_2-2-物理媒介" tabindex="-1"><a class="header-anchor" href="#_2-2-物理媒介" aria-hidden="true">#</a> 2.2 物理媒介</h3><p>物理媒介分两种：引导型媒介（沿着固体媒介传播）和非引导型媒介（在空气或外层空间传播）。</p><p>物理媒介大概有以下几种：双绞铜线，同轴电缆，光纤，陆地无线电信道，卫星无线电信道。</p><h2 id="_3-网络核心" tabindex="-1"><a class="header-anchor" href="#_3-网络核心" aria-hidden="true">#</a> 3. 网络核心</h2><p>网络核心即由连接端系统的分组交换机和链路组成的网状网络。</p><h3 id="_3-1-分组交换" tabindex="-1"><a class="header-anchor" href="#_3-1-分组交换" aria-hidden="true">#</a> 3.1 分组交换</h3>',21),i=a("p",null,[s("我们设某端系统要发送一个"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"L"),a("mtext",null," "),a("mi",null,"b"),a("mi",null,"i"),a("mi",null,"t")]),a("annotation",{encoding:"application/x-tex"},"L\\ bit")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"L"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal"},"bi"),a("span",{class:"mord mathnormal"},"t")])])]),s("的分组，链路传输的效率为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R"),a("mtext",null," "),a("mi",null,"b"),a("mi",null,"p"),a("mi",null,"s")]),a("annotation",{encoding:"application/x-tex"},"R\\ bps")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal"},"b"),a("span",{class:"mord mathnormal"},"p"),a("span",{class:"mord mathnormal"},"s")])])]),s("，则传输该分组所需要的时间为"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"L"),a("mi",{mathvariant:"normal"},"/"),a("mi",null,"R"),a("mtext",null," "),a("mi",null,"s")]),a("annotation",{encoding:"application/x-tex"},"L/R\\ s")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"L"),a("span",{class:"mord"},"/"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal"},"s")])])]),s(" 。")],-1),h=a("p",null,[s("交换机在开始向输出链路转发该分组的第一个bit之前，必须接收到整个分组，这被称为"),a("strong",null,"存储转发传输"),s("。考虑P个分组通过N个交换机到达目的系统（不考虑传播时延）所需的时间为多长："),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mo",{stretchy:"false"},"("),a("mi",null,"N"),a("mo",null,"+"),a("mi",null,"P"),a("mo",null,"−"),a("mn",null,"1"),a("mo",{stretchy:"false"},")"),a("mo",null,"∗"),a("mi",null,"L"),a("mi",{mathvariant:"normal"},"/"),a("mi",null,"R"),a("mtext",null," "),a("mi",null,"s")]),a("annotation",{encoding:"application/x-tex"},"(N+P-1)*L/R\\ s")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mopen"},"("),a("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"+"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"P"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"−"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord"},"1"),a("span",{class:"mclose"},")"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),a("span",{class:"mbin"},"∗"),a("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"L"),a("span",{class:"mord"},"/"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal"},"s")])])]),s("。")],-1),p=n('<p>每台分组交换机的每个链路都有一个<strong>输出缓存</strong>（output buffer）或<strong>输出队列</strong>（output queue）。它用于缓存准备转发的分组。如果某个分组所需要的链路正在工作，那么就需要进入等待，称为<strong>排队时延</strong>。由于缓存空间是有限的，在出现空间充满的情况下，就会发<strong>分组丢失</strong>（packet loss）现象，到达的分组或已经在排队的分组或丢弃一个。</p><p>每台路由器中存在一张<strong>转发表</strong>，用于将目的地址（或目的地址的一部分）映射为输出链路。每当一个分组到达路由器中，通过扫描转发表，确定下一条合适的路线。同时，因特网中有一些特殊的<strong>路由选择协议</strong>（routing protocol）用于自动的配置这些转发表。</p><h3 id="_3-2-网络中的网络" tabindex="-1"><a class="header-anchor" href="#_3-2-网络中的网络" aria-hidden="true">#</a> 3.2 网络中的网络</h3><img src="http://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/ISP的互联.jpg" alt="ISP的互联" style="zoom:25%;"><p>详见P22页。</p><h2 id="_4-分组交换网中的时延-丢包和吞吐量" tabindex="-1"><a class="header-anchor" href="#_4-分组交换网中的时延-丢包和吞吐量" aria-hidden="true">#</a> 4.分组交换网中的时延，丢包和吞吐量</h2><h3 id="_4-1-时延" tabindex="-1"><a class="header-anchor" href="#_4-1-时延" aria-hidden="true">#</a> 4.1 时延</h3><p>分组从源系统到目的系统，会经历很多时延，比较重要的是以下几种。</p><ol><li><p>处理时延</p><p>在分组到达路由器后会对分组进行一系列的检查，包括检查分组首部和决定将该分组导向何处，检验差错等。</p></li><li><p>排队时延</p><p>在队列中，分组在链路上等待传输，将经受排队时延。排队时延取决于排队的分组数量。</p></li><li><p>传输时延</p><p>将所有分组的比特推向（发射）链路所需要的时间。</p></li><li><p>传播时延</p><p>两端之间传输所需要的时间，受物理媒介的影响。</p></li></ol><p>关于传输时延和排队时延我的理解是，可以将它们看作水管，传输时延就是多少时间能过将所有的水从水管中射出，而水在脱离水管后到下个地方的时间就是传播时延。那么影响传输时延的因素更可以类比为一个系统瞬时并发推送的能力。</p><h3 id="_4-2-排队时延和丢包" tabindex="-1"><a class="header-anchor" href="#_4-2-排队时延和丢包" aria-hidden="true">#</a> 4.2 排队时延和丢包</h3>',11),o=a("p",null,[s("设"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"a")]),a("annotation",{encoding:"application/x-tex"},"a")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.4306em"}}),a("span",{class:"mord mathnormal"},"a")])])]),s("为分组到达输出队列的的平均速率，单位："),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"p"),a("mi",null,"k"),a("mi",null,"t"),a("mi",{mathvariant:"normal"},"/"),a("mi",null,"s")]),a("annotation",{encoding:"application/x-tex"},"pkt/s")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"p"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k"),a("span",{class:"mord mathnormal"},"t"),a("span",{class:"mord"},"/"),a("span",{class:"mord mathnormal"},"s")])])]),s("。"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"R")]),a("annotation",{encoding:"application/x-tex"},"R")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6833em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R")])])]),s("是传输速率，所有分组都是"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"L"),a("mtext",null," "),a("mi",null,"b"),a("mi",null,"i"),a("mi",null,"t")]),a("annotation",{encoding:"application/x-tex"},"L\\ bit")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6944em"}}),a("span",{class:"mord mathnormal"},"L"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal"},"bi"),a("span",{class:"mord mathnormal"},"t")])])]),s("组成的，则"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"L"),a("mi",null,"a"),a("mi",{mathvariant:"normal"},"/"),a("mtext",null," "),a("mi",null,"R")]),a("annotation",{encoding:"application/x-tex"},"La / \\ R")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"L"),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mord"},"/"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R")])])]),s("被称为"),a("strong",null,"流量强度"),s("（traffic intensity）。如果"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"L"),a("mi",null,"a"),a("mi",{mathvariant:"normal"},"/"),a("mtext",null," "),a("mi",null,"R"),a("mo",null,">"),a("mn",null,"1")]),a("annotation",{encoding:"application/x-tex"},"La /\\ R > 1")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"L"),a("span",{class:"mord mathnormal"},"a"),a("span",{class:"mord"},"/"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),a("span",{class:"mrel"},">"),a("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),a("span",{class:"base"},[a("span",{class:"strut",style:{height:"0.6444em"}}),a("span",{class:"mord"},"1")])])]),s("，那么该队列的长度将会趋近于无限多，所以："),a("strong",null,"设计系统是流量强度不能大于1。")],-1),c=a("p",null,"当流量强度不断变大时，显然不可能放得下所有分组，所以就会发生丢包，路由器会丢弃该分组。",-1),d=a("h3",{id:"_4-3-计算机网络中的吞吐量",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-3-计算机网络中的吞吐量","aria-hidden":"true"},"#"),s(" 4.3 计算机网络中的吞吐量")],-1),g=a("p",null,[s("如果有主机A向主机B传送一个文件，那么"),a("strong",null,"瞬时吞吐量"),s("是指主机B接收到该文件的速率（bps）。若大小是Fbit，用时Ts，那么平均吞吐量是"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"F"),a("mi",{mathvariant:"normal"},"/"),a("mi",null,"T"),a("mtext",null," "),a("mi",null,"b"),a("mi",null,"p"),a("mi",null,"s")]),a("annotation",{encoding:"application/x-tex"},"F/T\\ bps")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),a("span",{class:"mord"},"/"),a("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),a("span",{class:"mspace"}," "),a("span",{class:"mord mathnormal"},"b"),a("span",{class:"mord mathnormal"},"p"),a("span",{class:"mord mathnormal"},"s")])])]),s("。")],-1),u=a("p",null,[s("在多链路中，整体的吞吐量受限制于瓶颈链路，即"),a("span",{class:"katex"},[a("span",{class:"katex-mathml"},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("semantics",null,[a("mrow",null,[a("mi",null,"m"),a("mi",null,"i"),a("mi",null,"n"),a("mo",{stretchy:"false"},"{"),a("msub",null,[a("mi",null,"R"),a("mn",null,"0")]),a("mo",{separator:"true"},","),a("msub",null,[a("mi",null,"R"),a("mn",null,"1")]),a("mi",{mathvariant:"normal"},"."),a("mi",{mathvariant:"normal"},"."),a("mi",{mathvariant:"normal"},"."),a("mi",null,"R"),a("mi",null,"i"),a("mo",{stretchy:"false"},"}")]),a("annotation",{encoding:"application/x-tex"},"min\\{R_0,R_{1}...R{i}\\}")])])]),a("span",{class:"katex-html","aria-hidden":"true"},[a("span",{class:"base"},[a("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),a("span",{class:"mord mathnormal"},"min"),a("span",{class:"mopen"},"{"),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},"0")])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mpunct"},","),a("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),a("span",{class:"mord"},[a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"msupsub"},[a("span",{class:"vlist-t vlist-t2"},[a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.3011em"}},[a("span",{style:{top:"-2.55em","margin-left":"-0.0077em","margin-right":"0.05em"}},[a("span",{class:"pstrut",style:{height:"2.7em"}}),a("span",{class:"sizing reset-size6 size3 mtight"},[a("span",{class:"mord mtight"},[a("span",{class:"mord mtight"},"1")])])])]),a("span",{class:"vlist-s"},"​")]),a("span",{class:"vlist-r"},[a("span",{class:"vlist",style:{height:"0.15em"}},[a("span")])])])])]),a("span",{class:"mord"},"..."),a("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"R"),a("span",{class:"mord"},[a("span",{class:"mord mathnormal"},"i")]),a("span",{class:"mclose"},"}")])])]),s("。")],-1),x=n('<h2 id="_5-协议层次及服务模型" tabindex="-1"><a class="header-anchor" href="#_5-协议层次及服务模型" aria-hidden="true">#</a> 5. 协议层次及服务模型</h2><h3 id="_5-1-分层的体系结构" tabindex="-1"><a class="header-anchor" href="#_5-1-分层的体系结构" aria-hidden="true">#</a> 5.1 分层的体系结构</h3><p>我们将庞大而又复杂的体系进行分层，每层通过以下方式提供服务：</p><ol><li>在这层执行了某个操作</li><li>使用下层的服务</li></ol><p>使用这样的分层模式，改变某一服务的实现而不影响其他系统组件是一大优点。</p><p>在计算机网络中，构建了一层一层的<strong>服务模型</strong>（service model），每层通过自己的操作和直接执行下一层提供的服务来提供服务。</p><p>各层所有的协议总的被称为<strong>协议栈</strong>（protocol stack)。因特网的五层协议栈为</p><h4 id="_5-1-1-应用层" tabindex="-1"><a class="header-anchor" href="#_5-1-1-应用层" aria-hidden="true">#</a> 5.1.1 应用层</h4><p>应用层是网络应用程序及他们的应用层协议存留的地方，例如：HTTP，SMTP，FTP，DNS等。我们把位于应用层的信息称为<strong>报文</strong>（message）。</p><h4 id="_5-1-2-运输层" tabindex="-1"><a class="header-anchor" href="#_5-1-2-运输层" aria-hidden="true">#</a> 5.1.2 运输层</h4><p>运输层是在应用程序端点之间传输应用程报文。有两种最常见的协议分别是TCP和UDP。我们把位于运输层的信息称为报文段（segment）。</p><h4 id="_5-1-3-网络层" tabindex="-1"><a class="header-anchor" href="#_5-1-3-网络层" aria-hidden="true">#</a> 5.1.3 网络层</h4><p>网络层是负责在主机之间传输报文，著名的协议：网际协议（IP）就是位于这层。这层的信息称为<strong>数据报</strong>（datagram）。</p><h4 id="_5-1-4-链路层" tabindex="-1"><a class="header-anchor" href="#_5-1-4-链路层" aria-hidden="true">#</a> 5.1.4 链路层</h4><p>链路层将数据从一个节点（主机或路由器）移动到路径上的下一个节点。这层的信息称为<strong>帧</strong>（frame）。</p><h4 id="_5-1-5-物理层" tabindex="-1"><a class="header-anchor" href="#_5-1-5-物理层" aria-hidden="true">#</a> 5.1.5 物理层</h4><p>物理层的任务是将链路层的帧的一个一个bit从一个节点传到下一个节点。</p><h3 id="_5-2-封装" tabindex="-1"><a class="header-anchor" href="#_5-2-封装" aria-hidden="true">#</a> 5.2 封装</h3><img src="http://blog-zzys.oss-cn-beijing.aliyuncs.com/articles/分组交换机.jpg" alt="分组交换机" style="zoom:25%;"><p>通过上图可以看出数据从发送端的协议栈向下在许多的分组交换机上上下下，最后到目的地后向上到达接收端的协议栈。链路交换机只实现了第一层和第二层，而路由器则实现了第一层到第三层。同时也体现出一个重要的概念：<strong>封装</strong>，数据通过协议栈将数据一步一步进行包装拆解。</p><h2 id="_6-面对攻击的网络" tabindex="-1"><a class="header-anchor" href="#_6-面对攻击的网络" aria-hidden="true">#</a> 6. 面对攻击的网络</h2><ol><li>植入有害程序</li><li>攻击服务器和基础设施（DDOS）</li><li>嗅探分组，IP欺骗</li></ol>',22),_=[r,i,h,p,o,c,d,g,u,x];function b(w,y){return l(),e("div",null,_)}const v=t(m,[["render",b],["__file","network-ttd-summary.html.vue"]]);export{v as default};
