import{_ as p,r as t,o,c,a,b as n,d as i,e as s}from"./app-20538318.js";const l={},r=s('<h2 id="_1-goctl基础" tabindex="-1"><a class="header-anchor" href="#_1-goctl基础" aria-hidden="true">#</a> 1.goctl基础</h2><h3 id="_1-1-api" tabindex="-1"><a class="header-anchor" href="#_1-1-api" aria-hidden="true">#</a> 1.1 api</h3><p>api: goctl api go -api *.api -dir ../ --style=goZero</p><p>doc: goctl api dpc --dir ./</p><h3 id="_1-2-rpc" tabindex="-1"><a class="header-anchor" href="#_1-2-rpc" aria-hidden="true">#</a> 1.2 rpc</h3><p>goctl rpc protoc user.proto --go_out=../ --go-grpc_out=../ --zrpc_out=../ --style=goZero</p><p>sql2pb -go_package ./pb -host 192.168.72.128 -package pb -password root -port 3306 -schema douyin -service_name user -table user -user root &gt; user.proto</p><h3 id="_1-3-protoc" tabindex="-1"><a class="header-anchor" href="#_1-3-protoc" aria-hidden="true">#</a> 1.3 protoc</h3><p>protoc -I ./ --go_out=paths=source_relative:. --go-grpc_out=paths=source_relative:. userModel.proto</p><h3 id="_1-4-model" tabindex="-1"><a class="header-anchor" href="#_1-4-model" aria-hidden="true">#</a> 1.4 model</h3><p>goctl model mysql datasource -url =&quot;root:root:@tcp(192.168.72.128:3306)/douyin&quot; -table = &quot;follow&quot; -dir=&quot;./&quot; --style=goZero -c --home= &quot;&quot;</p><p>goctl model mysql ddl -src=&quot;./*.sql&quot; -dir=&quot;&quot; -c --style=goZero -c --home= &quot;&quot;</p><h2 id="_2-go-zero-实践" tabindex="-1"><a class="header-anchor" href="#_2-go-zero-实践" aria-hidden="true">#</a> 2. go-zero 实践</h2>',13),u={href:"https://github.com/YangZhang-dev/douyin",target:"_blank",rel:"noopener noreferrer"},d=a("a",{href:"(https://www.apifox.cn/apidoc/shared-09d88f32-0b6c-4157-9d07-a36d32d7a75c/api-50707520)"},"接口文档",-1),k=s(`<p>大概有用户服务，视频服务，用户聊天，关注用户，点赞视频，评论视频</p><h4 id="_2-1-数据库" tabindex="-1"><a class="header-anchor" href="#_2-1-数据库" aria-hidden="true">#</a> 2.1 数据库</h4><p>根据微服务架构来建好数据库。</p><p>建如下数据库：</p><ol><li>douyin_user</li><li>douyin_video</li></ol><h4 id="_2-2-生成model文件" tabindex="-1"><a class="header-anchor" href="#_2-2-生成model文件" aria-hidden="true">#</a> 2.2 生成model文件</h4><p>首先在commom下创建三个全局的文件夹，一个用于httpresult，一个是全局的key，一个是存放错误码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>douyin<span class="token punctuation">\\</span>deploy<span class="token operator">&gt;</span> goctl model mysql ddl <span class="token parameter variable">-src</span><span class="token operator">=</span><span class="token string">&quot;./sql/*.sql&quot;</span> <span class="token parameter variable">-dir</span><span class="token operator">=</span><span class="token string">&quot;../model&quot;</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">--style</span><span class="token operator">=</span>goZero <span class="token parameter variable">-c</span> <span class="token parameter variable">--home</span> .<span class="token punctuation">\\</span>goctl<span class="token punctuation">\\</span><span class="token number">1.4</span>.3<span class="token punctuation">\\</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>goctl model mysql ddl -src=&quot;./sql/*.sql&quot; -dir=&quot;../model&quot; -c --style=goZero -c --home .\\goctl\\1.4.3\\</p><p>运行 go mod tidy 下载依赖</p><h4 id="_2-3-目录结构" tabindex="-1"><a class="header-anchor" href="#_2-3-目录结构" aria-hidden="true">#</a> 2.3 目录结构</h4><p>创建app目录</p><p>app下创建user和video</p><p>user下创建cmd和model</p><p>cmd下创建api和rpc</p><p>video同理</p><h4 id="_2-4-编写api文件" tabindex="-1"><a class="header-anchor" href="#_2-4-编写api文件" aria-hidden="true">#</a> 2.4 编写api文件</h4><p>在api下创建desc文件夹，用于存放api文件</p><p>对于api中的实例信息，建立文件夹存放，在desc下建立user文件夹存放user实例</p><p>可以搭配validator进行参数校验</p><h4 id="_2-5-生成api代码" tabindex="-1"><a class="header-anchor" href="#_2-5-生成api代码" aria-hidden="true">#</a> 2.5 生成api代码</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>douyin<span class="token punctuation">\\</span>app<span class="token punctuation">\\</span>user<span class="token punctuation">\\</span>cmd<span class="token punctuation">\\</span>api<span class="token punctuation">\\</span>desc<span class="token operator">&gt;</span> goctl api go <span class="token parameter variable">-api</span> userApi.api <span class="token parameter variable">-dir</span> <span class="token punctuation">..</span>/  <span class="token parameter variable">--style</span><span class="token operator">=</span>goZero <span class="token parameter variable">--home</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/deploy/goctl/1.4.3/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在etc/userApi.yaml中配置信息</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">Name</span><span class="token punctuation">:</span> userApi
<span class="token key atrule">Host</span><span class="token punctuation">:</span> 0.0.0.0
<span class="token key atrule">Port</span><span class="token punctuation">:</span> <span class="token number">8888</span>

<span class="token key atrule">Log</span><span class="token punctuation">:</span>
  <span class="token key atrule">ServiceName</span><span class="token punctuation">:</span> userApi
  <span class="token key atrule">Encoding</span><span class="token punctuation">:</span> plain
  <span class="token key atrule">Level</span><span class="token punctuation">:</span> info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-6-编写proto文件" tabindex="-1"><a class="header-anchor" href="#_2-6-编写proto文件" aria-hidden="true">#</a> 2.6 编写proto文件</h4><p>使用sql2pb工具生成pb文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>douyin<span class="token punctuation">\\</span>app<span class="token punctuation">\\</span>user<span class="token punctuation">\\</span>cmd<span class="token punctuation">\\</span>rpc<span class="token punctuation">\\</span>pb<span class="token operator">&gt;</span> sql2pb <span class="token parameter variable">-go_package</span>  ./pb <span class="token parameter variable">-host</span> <span class="token number">192.168</span>.72.128 <span class="token parameter variable">-package</span> pb <span class="token parameter variable">-password</span> root <span class="token parameter variable">-port</span> <span class="token number">3306</span> <span class="token parameter variable">-schema</span> douyin_user <span class="token parameter variable">-service_name</span> user <span class="token parameter variable">-table</span> user <span class="token parameter variable">-user</span> root <span class="token operator">&gt;</span> userRpc.proto
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据自己的需求进行修改</p><h4 id="_2-7-生成rpc代码" tabindex="-1"><a class="header-anchor" href="#_2-7-生成rpc代码" aria-hidden="true">#</a> 2.7 生成rpc代码</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>douyin<span class="token punctuation">\\</span>app<span class="token punctuation">\\</span>user<span class="token punctuation">\\</span>cmd<span class="token punctuation">\\</span>rpc<span class="token punctuation">\\</span>pb<span class="token operator">&gt;</span> goctl rpc protoc videoRpc.proto <span class="token parameter variable">--go_out</span><span class="token operator">=</span><span class="token punctuation">..</span>/ --go-grpc_out<span class="token operator">=</span><span class="token punctuation">..</span>/ <span class="token parameter variable">--zrpc_out</span><span class="token operator">=</span><span class="token punctuation">..</span>/ <span class="token parameter variable">--style</span><span class="token operator">=</span>goZero <span class="token parameter variable">--home</span> <span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/deploy/goctl/1.4.3/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在etc/userRpc.yaml中配置信息</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">Name</span><span class="token punctuation">:</span> userRpc
<span class="token key atrule">ListenOn</span><span class="token punctuation">:</span> 0.0.0.0<span class="token punctuation">:</span><span class="token number">8080</span>
<span class="token key atrule">Mode</span><span class="token punctuation">:</span> dev
<span class="token key atrule">Etcd</span><span class="token punctuation">:</span>
  <span class="token key atrule">Hosts</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">2379</span>
  <span class="token key atrule">Key</span><span class="token punctuation">:</span> userRpc

<span class="token key atrule">Log</span><span class="token punctuation">:</span>
  <span class="token key atrule">ServiceName</span><span class="token punctuation">:</span> userRpc
  <span class="token key atrule">Encoding</span><span class="token punctuation">:</span> plain
  <span class="token key atrule">Level</span><span class="token punctuation">:</span> info
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-8-rpc配置数据库和缓存连接" tabindex="-1"><a class="header-anchor" href="#_2-8-rpc配置数据库和缓存连接" aria-hidden="true">#</a> 2.8 rpc配置数据库和缓存连接</h4><p>在etc/userApi.yaml中配置信息</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># DB,Cache</span>
<span class="token key atrule">DB</span><span class="token punctuation">:</span>
  <span class="token key atrule">DataSource</span><span class="token punctuation">:</span> root<span class="token punctuation">:</span>root@tcp(127.0.0.1<span class="token punctuation">:</span>3306)/douyin_user<span class="token punctuation">?</span>charset=utf8mb4<span class="token important">&amp;parseTime=true&amp;loc=Asia%2FShanghai</span>
<span class="token key atrule">Cache</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">Host</span><span class="token punctuation">:</span> 127.0.0.1<span class="token punctuation">:</span><span class="token number">6379</span>
    <span class="token key atrule">Pass</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在config/config.go配置</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
zrpc<span class="token punctuation">.</span>RpcServerConf
DB <span class="token keyword">struct</span> <span class="token punctuation">{</span> <span class="token comment">// 数据库配置，除mysql外，可能还有mongo等其他数据库</span>
DataSource <span class="token builtin">string</span> <span class="token comment">// mysql链接地址，满足 $user:$password@tcp($ip:$port)/$db?$queries 格式即可</span>
<span class="token punctuation">}</span>
Cache   cache<span class="token punctuation">.</span>CacheConf <span class="token comment">// redis缓存</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在svc/serviceContext.go中配置信息</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>
   Config    config<span class="token punctuation">.</span>Config
   UserModel model<span class="token punctuation">.</span>UserModel
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>
      Config<span class="token punctuation">:</span>    c<span class="token punctuation">,</span>
      UserModel<span class="token punctuation">:</span> model<span class="token punctuation">.</span><span class="token function">NewUserModel</span><span class="token punctuation">(</span>sqlx<span class="token punctuation">.</span><span class="token function">NewMysql</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>DB<span class="token punctuation">.</span>DataSource<span class="token punctuation">)</span><span class="token punctuation">,</span> c<span class="token punctuation">.</span>Cache<span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-9-api配置连接rpc" tabindex="-1"><a class="header-anchor" href="#_2-9-api配置连接rpc" aria-hidden="true">#</a> 2.9 api配置连接rpc</h4><p>在etc/user.yaml中配置信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>UserRpcConf:
  Etcd:
    Hosts:
      - <span class="token number">0.0</span>.0.0:2379
    Key: userRpc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在internal/config中配置</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> Config <span class="token keyword">struct</span> <span class="token punctuation">{</span>
rest<span class="token punctuation">.</span>RestConf
UserRpcConf zrpc<span class="token punctuation">.</span>RpcClientConf
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在svc/serviceContext.go中配置</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">type</span> ServiceContext <span class="token keyword">struct</span> <span class="token punctuation">{</span>
Config                config<span class="token punctuation">.</span>Config
OptionalJWTMiddleware rest<span class="token punctuation">.</span>Middleware
UserRpc               userrpc<span class="token punctuation">.</span>UserRpc
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">NewServiceContext</span><span class="token punctuation">(</span>c config<span class="token punctuation">.</span>Config<span class="token punctuation">)</span> <span class="token operator">*</span>ServiceContext <span class="token punctuation">{</span>
<span class="token keyword">return</span> <span class="token operator">&amp;</span>ServiceContext<span class="token punctuation">{</span>
Config<span class="token punctuation">:</span>                c<span class="token punctuation">,</span>
OptionalJWTMiddleware<span class="token punctuation">:</span> middleware<span class="token punctuation">.</span><span class="token function">NewOptionalJWTMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>Handle<span class="token punctuation">,</span>
UserRpc<span class="token punctuation">:</span>               userrpc<span class="token punctuation">.</span><span class="token function">NewUserRpc</span><span class="token punctuation">(</span>zrpc<span class="token punctuation">.</span><span class="token function">MustNewClient</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>UserRpcConf<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46);function v(m,b){const e=t("ExternalLinkIcon");return o(),c("div",null,[r,a("p",null,[n("简易版抖音项目，"),a("a",u,[n("YangZhang-dev/douyin: 基于go-zero的极简版抖音后端项目 (github.com)"),i(e)]),n("，"),d]),k])}const g=p(l,[["render",v],["__file","go-zero入门实践.html.vue"]]);export{g as default};
