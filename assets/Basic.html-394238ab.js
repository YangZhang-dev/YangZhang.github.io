const l=JSON.parse('{"key":"v-0af43b0c","path":"/code/back/java/basic/Basic.html","title":"java基础","lang":"en-US","frontmatter":{"title":"java基础","order":1,"author":"zzys","date":"2023-03-10T00:00:00.000Z","category":["面经"],"tags":["面试","java基础","八股"]},"headers":[{"level":2,"title":"杂项","slug":"杂项","link":"#杂项","children":[{"level":3,"title":"为什么说java是编译和解释共存的语言？","slug":"为什么说java是编译和解释共存的语言","link":"#为什么说java是编译和解释共存的语言","children":[]},{"level":3,"title":"位运算","slug":"位运算","link":"#位运算","children":[]},{"level":3,"title":"验证Java只有值传递","slug":"验证java只有值传递","link":"#验证java只有值传递","children":[]}]},{"level":2,"title":"基本数据类型","slug":"基本数据类型","link":"#基本数据类型","children":[{"level":3,"title":"包装类型的缓存机制","slug":"包装类型的缓存机制","link":"#包装类型的缓存机制","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"重写","slug":"重写","link":"#重写","children":[]}]},{"level":2,"title":"变量","slug":"变量","link":"#变量","children":[{"level":3,"title":"成员变量和局部变量的区别","slug":"成员变量和局部变量的区别","link":"#成员变量和局部变量的区别","children":[]}]},{"level":2,"title":"面向对象基础","slug":"面向对象基础","link":"#面向对象基础","children":[{"level":3,"title":"接口和抽象类有什么共同点和区别？","slug":"接口和抽象类有什么共同点和区别","link":"#接口和抽象类有什么共同点和区别","children":[]},{"level":3,"title":"引用拷贝、深拷贝和浅拷贝","slug":"引用拷贝、深拷贝和浅拷贝","link":"#引用拷贝、深拷贝和浅拷贝","children":[]},{"level":3,"title":"hashCode()","slug":"hashcode","link":"#hashcode","children":[]},{"level":3,"title":"为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"为什么重写-equals-时必须重写-hashcode-方法","link":"#为什么重写-equals-时必须重写-hashcode-方法","children":[]}]},{"level":2,"title":"String","slug":"string","link":"#string","children":[{"level":3,"title":"String不可变的原因","slug":"string不可变的原因","link":"#string不可变的原因","children":[]}]},{"level":2,"title":"异常","slug":"异常","link":"#异常","children":[{"level":3,"title":"finally 中的代码一定会执行吗？","slug":"finally-中的代码一定会执行吗","link":"#finally-中的代码一定会执行吗","children":[]},{"level":3,"title":"try-with-resource","slug":"try-with-resource","link":"#try-with-resource","children":[]}]},{"level":2,"title":"反射","slug":"反射","link":"#反射","children":[]},{"level":2,"title":"注解","slug":"注解","link":"#注解","children":[{"level":3,"title":"注解的解析方法有哪几种？","slug":"注解的解析方法有哪几种","link":"#注解的解析方法有哪几种","children":[]}]},{"level":2,"title":"序列化","slug":"序列化","link":"#序列化","children":[{"level":3,"title":"Java自带的序列化实现","slug":"java自带的序列化实现","link":"#java自带的序列化实现","children":[]},{"level":3,"title":"为什么不适用Java自带的序列化","slug":"为什么不适用java自带的序列化","link":"#为什么不适用java自带的序列化","children":[]}]},{"level":2,"title":"泛型和通配符","slug":"泛型和通配符","link":"#泛型和通配符","children":[]},{"level":2,"title":"函数式编程","slug":"函数式编程","link":"#函数式编程","children":[]}],"git":{"updatedTime":1702478118000,"contributors":[{"name":"YangZhang","email":"2803436425@qq.com","commits":1}]},"filePathRelative":"code/back/java/basic/Basic.md","copyright":{"author":"YangZhang","license":"MIT Licensed | Copyright © 2023-present YangZhang"}}');export{l as data};
