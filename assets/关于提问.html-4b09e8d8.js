import{_ as i,r,o as c,c as t,a as o,b as e,d,e as l}from"./app-20538318.js";const n={},p={href:"https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/tangx/Stop-Ask-Questions-The-Stupid-Ways/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"},s=l('<p>我认为提问是一个Cser真正入门必备的技能之一，另一个我觉得比较重要是对信息的检索过滤能力，这两篇文章都对我的启发很大。</p><h2 id="提问之前" tabindex="-1"><a class="header-anchor" href="#提问之前" aria-hidden="true">#</a> 提问之前</h2><p>引用原文：</p><ol><li><p>尝试在你准备提问的论坛的旧文章中搜索答案。</p><p>这个深有同感，以往会加一些相关群聊，很多问题能够在历史记录里找到。</p></li><li><p>尝试上网搜索以找到答案。</p><p>虽然现在有意的不在搜索中文回答（CSDN），但是看到英文时还是有一点胆怯，还需要继续努力。</p></li><li><p>尝试阅读手册以找到答案。</p><p>这个是我一直以来忽视的地方，<code>man</code>手册以前基本没看过，今天尝试用<code>man</code>看了一下关于<code>tmux</code>和<code>gdb</code>的相关知识，解答了很多相关的问题。</p></li><li><p>尝试阅读常见问题文件（FAQ）以找到答案。</p><p>自我认为FAQ还是很常用的，经常遇见想了半天的问题，转眼就在FAQ找到了，还是需要加强相关意识。</p></li><li><p>尝试自己检查或试验以找到答案。</p><p>个人认为这是最重要的一步，在以往完成<code>6.824</code>时，特别多的GoRoutine的高并发导致问题根本不知道如何解决，只能自己打日志，分析，不断尝试，缩小问题范围，最后定位解决。</p></li><li><p>向你身边的强者朋友打听以找到答案。</p><p>这个还需要进一步的努力，以前没有相关的前辈，需要广交朋友，提高自己的学习效率。</p></li><li><p>如果你是程序开发者，请尝试阅读源代码以找到答案。</p><p>对看源代码还是有点抵触的，但是读源代码是变为强者必备的能力，还是需要培养。</p></li></ol><h2 id="当你提问时" tabindex="-1"><a class="header-anchor" href="#当你提问时" aria-hidden="true">#</a> 当你提问时</h2><h3 id="提问的地点" tabindex="-1"><a class="header-anchor" href="#提问的地点" aria-hidden="true">#</a> 提问的地点</h3><p>当必须要提问，首先要选择正确的提问地点，最应该发布在项目最相关的地方，如一个Github repo issue。其次是相关项目的官方群聊，如ysyx的群聊。最后是在一个通用的提问平台，如Stack Overflow。</p><h3 id="提问的方式" tabindex="-1"><a class="header-anchor" href="#提问的方式" aria-hidden="true">#</a> 提问的方式</h3><p>引用原文</p><ol><li>请问一个关于 <code>什么</code> 的问题。</li><li>我想要达到 <code>什么样</code> 效果，但是我这样做出现了 <code>什么样</code> 的问题。</li><li>报错日志是 <code>这样</code> 的。（要 <code>学会</code> 画关键字）</li><li>我尝试过 <code>什么</code> 方法来解决。</li><li>我尝试搜索过了 <code>什么</code> 关键字，在里面找到了 <code>这些 URL</code> 的回答，尝试了还是没有解决问题。</li><li>我用的是 <code>什么</code> 操作系统，版本号是多少。</li><li>我用的是 <code>什么</code> 软件，版本号是多少。</li><li>谢谢</li></ol><h3 id="提问的解读" tabindex="-1"><a class="header-anchor" href="#提问的解读" aria-hidden="true">#</a> 提问的解读</h3><p>作为一个计算机从业人员，我认为要避免玻璃心，即对于合理的批评，不应过度解读到情绪上，而是要反思自己是否做了一些不正确的事情，如何改掉自己的这种坏习惯，以便更好的提升自己。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>以前从来没有系统的学习过提问相关的知识，现在看来，想要不断的深入一个领域，还是要学会提问，和人交流，这也是我缺少的能力。希望在接下来的学习中能够不断的学习，锻炼提问的能力。</p>',14);function _(u,f){const a=r("ExternalLinkIcon");return c(),t("div",null,[o("p",null,[e("在我学习计算机的途径中，很少向人提问，大概是性格原因。大多数情况下要么是在一段艰辛的搜索后找到答案，要么是不了了之。无论是哪种情况，无疑降低了我学习的效率，同时我也没有积累关于提问的能力。今天通过学习"),o("a",p,[e("提问的智慧"),d(a)]),e("和"),o("a",h,[e("别像弱智一样提问"),d(a)]),e("这两篇文章，我从中学到了很多关于提问相关的问题，例如：在哪里提问？如何提问？哪些问题值得提问？")]),s])}const b=i(n,[["render",_],["__file","关于提问.html.vue"]]);export{b as default};
