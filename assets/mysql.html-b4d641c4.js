import{_ as s,r as i,o as r,c as a,a as e,b as l,d as t,e as o}from"./app-20538318.js";const c={},h=e("h2",{id:"mysql不适合做什么",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mysql不适合做什么","aria-hidden":"true"},"#"),l(),e("strong",null,"MySQL不适合做什么")],-1),d=e("p",null,"MySQL是OLTP（OnLine Transaction Processsing 联机事务处理）数据库，相较于OLAP（Online Analytical Processing 联机分析处理）数据量小，查询简单。",-1),p=e("p",null,"Mysql是磁盘数据库，基于磁盘IO，相较于Redis内存型数据库，速度慢上不少。",-1),_=e("p",null,"综上：",-1),u={href:"https://www.cnblogs.com/purple5252/p/14751081.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://juejin.cn/post/6975792939599396871",target:"_blank",rel:"noopener noreferrer"},f=e("li",null,"热点数据查询：基于磁盘IO（bufferPool）",-1),y=e("li",null,"实时数据",-1),q=e("h2",{id:"mysql数量级达到一种什么量级可能会存在一些性能问题",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mysql数量级达到一种什么量级可能会存在一些性能问题","aria-hidden":"true"},"#"),l(" Mysql数量级达到一种什么量级可能会存在一些性能问题")],-1),b={href:"https://www.zhihu.com/question/351797203",target:"_blank",rel:"noopener noreferrer"},L=e("p",null,"2kw条数据左右性能会有下降，当然这是在硬件配置不够的情况下，传统的说法是大于2kw，B+树索引就达到了4层，随机IO拉低了查询效率。但是在现在的SSD场景下，多出的几次随机IO也无关紧要。",-1),k=e("p",null,"实际上是在高出三层后，如果内存不够大，实际上buffer pool只能够缓存前三层的非叶子节点，最后一层只能够进行磁盘随机IO。所以会显现出效率断层下降的情况，说到底还是硬件不够好，应该加核心，上内存。",-1),x=e("h2",{id:"mysql到达什么量级去考虑做分库分表",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#mysql到达什么量级去考虑做分库分表","aria-hidden":"true"},"#"),l(" Mysql到达什么量级去考虑做分库分表")],-1),M={href:"https://juejin.cn/post/7176424241531715621",target:"_blank",rel:"noopener noreferrer"},S=o('<p>达到单表性能较低的时候，这个没办法衡量，主要和当前的硬件水平以及所处场景相关。</p><p>一般是当并发量很高或磁盘不够用了会去选择分库。</p><p>当单表数据量很大，硬件无法提升，SQL优化，索引都尝试过了才会去选择分表。</p><p>如果非要说一个数字，那么阿里巴巴的<code>《Java开发手册》</code>提出：</p><blockquote><p>单表行数超过<code>500万</code>行或者单表容量超过<code>2GB</code>，才推荐进行分库分表。</p></blockquote><p>当然应该已经过时了。</p><h2 id="建表一般会遵守什么原则或者规范" tabindex="-1"><a class="header-anchor" href="#建表一般会遵守什么原则或者规范" aria-hidden="true">#</a> 建表一般会遵守什么原则或者规范</h2>',7),g={href:"https://zhuanlan.zhihu.com/p/354375388",target:"_blank",rel:"noopener noreferrer"},O=o('<ul><li>命名：小写+下划线</li><li>使用InnoDB 存储引擎</li><li>使用UTF8MB4</li><li>加注释</li><li>优先选择占用存储空间小的类型</li><li>尽可能的设置NOT NULL</li><li>使用timestamp代替datetime</li><li>考虑可能的SQL，充分利用索引（索引覆盖等等，索引的知识）</li><li>主键单机选择自增，分布式选择雪花（个人）</li><li>通用字段：create_time,update_time,del_flag,version（乐观锁）等</li></ul><h2 id="mysql什么时候会全表扫描" tabindex="-1"><a class="header-anchor" href="#mysql什么时候会全表扫描" aria-hidden="true">#</a> MySQL什么时候会全表扫描</h2><ol><li><p>用不上索引：对于一条SQL，没有建立索引或者索引失效。</p></li><li><p>优化器发现使用索引的效率低于全表</p><p>使用索引后，大部分情况是是随机IO一次读一条，假设次数是T</p><p>使用全表，一次读一页，假设读取次数是B页</p><p>如果T大于B，那么就不使用索引而采用全表扫描。</p></li></ol><h2 id="mysql表里有5亿的数据-分页查询怎么实现" tabindex="-1"><a class="header-anchor" href="#mysql表里有5亿的数据-分页查询怎么实现" aria-hidden="true">#</a> MySQL表里有5亿的数据，分页查询怎么实现</h2><p>先介绍深度分页，为什么深度分页慢（分页的本质：舍弃）。然后说怎么做：</p><ul><li>业务上避免随机深度分页</li><li>可以采用子查询降低查询代价</li></ul><p>https://blog.csdn.net/weixin_40834464/article/details/107351181</p>',7);function w(B,I){const n=i("ExternalLinkIcon");return r(),a("div",null,[h,d,p,_,e("ol",null,[e("li",null,[l("海量数据查询："),e("a",u,[l("MySQL不香吗，为啥还要Elasticsearch"),t(n)])]),e("li",null,[l("大数据文本检索："),e("a",m,[l("为什么 Mysql 不适合大数据文本检索 "),t(n)])]),f,y]),q,e("p",null,[e("a",b,[l("Mysql为什么只能支持2000w左右的数据量？"),t(n)])]),L,k,x,e("p",null,[e("a",M,[l("面试必备：分库分表经典15连问"),t(n)])]),S,e("p",null,[e("a",g,[l("MySQL数据库设计开发规范 "),t(n)])]),O])}const T=s(c,[["render",w],["__file","mysql.html.vue"]]);export{T as default};
