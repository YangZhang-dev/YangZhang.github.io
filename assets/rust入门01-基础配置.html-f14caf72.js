import{_ as n,r as i,o as r,c as d,a as e,b as a,d as l,e as c}from"./app-20538318.js";const t={},o=e("h2",{id:"_1-下载和配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_1-下载和配置","aria-hidden":"true"},"#"),a(" 1.下载和配置")],-1),u={href:"https://www.rust-lang.org/tools/install",target:"_blank",rel:"noopener noreferrer"},p=c(`<p>更新：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rustup update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>卸载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rustup self uninstall	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>验证：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rustc <span class="token parameter variable">--verison</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>本地文档：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rustup doc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_2-hello-world" tabindex="-1"><a class="header-anchor" href="#_2-hello-world" aria-hidden="true">#</a> 2. hello world</h2><p>创建main.rs文件，输入以下代码：</p><div class="language-rust line-numbers-mode" data-ext="rs"><pre class="language-rust"><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用以下命令编译：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>rustc main.rs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-cargo" tabindex="-1"><a class="header-anchor" href="#_3-cargo" aria-hidden="true">#</a> 3. cargo</h2><p>类似于java的maven，cargo是rust的代码构建，依赖管理工具</p><p>使用下面的命令检查cargo是否安装好了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> <span class="token parameter variable">--version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用下面的命令创建cargo项目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> new hello_cargo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>src目录下存放源代码，而<strong>Cargo.toml</strong>，则是类似于pom.xml的配置文件。在rust中，每一个依赖称作crate。</p><p>在项目根目录使用下面的命令的命令构建项目：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> build
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用下面的命令来运行项目。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> run
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用下面的命令来检查代码是否能够通过编译：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> check
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用下面的命令来构建正式版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cargo</span> build <span class="token parameter variable">--release</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,28);function v(h,g){const s=i("ExternalLinkIcon");return r(),d("div",null,[o,e("p",null,[a("官网下载："),e("a",u,[a("Install Rust - Rust Programming Language (rust-lang.org)"),l(s)]),a("，选择1默认安装。")]),p])}const b=n(t,[["render",v],["__file","rust入门01-基础配置.html.vue"]]);export{b as default};
