import{_ as e,r as o,o as i,c as t,a as n,b as a,d as p,e as l}from"./app-20538318.js";const c={},r={href:"https://blog.kdyzm.cn/post/48",target:"_blank",rel:"noopener noreferrer"},u=l(`<h2 id="启动项目" tabindex="-1"><a class="header-anchor" href="#启动项目" aria-hidden="true">#</a> 启动项目</h2><ol><li><p>git clone https://gitee.com/y_project/RuoYi-Vue.git</p></li><li><p>修改ruoyi-admin中的application-druid.yaml数据源配置以及application.yaml中的redis配置</p></li><li><p>新建ry-vue数据库，导入sql包下的文件</p></li></ol><h2 id="新建模块" tabindex="-1"><a class="header-anchor" href="#新建模块" aria-hidden="true">#</a> 新建模块</h2><ol><li><p>建立新模块jcx，引入ruoyi-framework依赖</p></li><li><p>更换父模块为ruoyi</p></li><li><p>在ruoyi-admin中引入jcx依赖</p></li><li><p>修改ruoyi-generator中的generator.yaml文件的代码生成包配置</p></li><li><p>修改ruoyi-admin中application.yaml中的mybatis.typeAliasesPackage配置</p></li><li><p>修改ruoyi-framework中ApplicationConfig中@MapperScan</p></li><li><p>在ruoyi-admin中增加一个配置类将组件扫描进入spring</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>ruoyi<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">ComponentScan</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> kdyzm
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ComponentScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.kdyzm&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Config</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="生成并应用代码" tabindex="-1"><a class="header-anchor" href="#生成并应用代码" aria-hidden="true">#</a> 生成并应用代码</h2><ol><li><p>创建表</p></li><li><p>在代码生成页导入表，如果第二块配好了这里就不需要再动了，直接生成</p></li><li><p>拷贝到指定模块，并运行sql文件</p></li></ol>`,6);function d(m,k){const s=o("ExternalLinkIcon");return i(),t("div",null,[n("p",null,[a("最近使用若依进行低代码开发，总结了一下启动需要修改的配置项。 "),n("a",r,[a("若依管理系统RuoYi-Vue（三）：代码生成器原理和实战 - 一枝梅的技术收录 (kdyzm.cn)"),p(s)])]),u])}const y=e(c,[["render",d],["__file","ruoyi-vue启动配置.html.vue"]]);export{y as default};
